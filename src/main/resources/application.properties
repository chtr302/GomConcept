# ===================================================================
# APPLICATION CONFIGURATION
# ===================================================================
spring.application.name=gomconcept
server.port=${PORT:8080}
server.servlet.context-path=/

# ===================================================================
# DATABASE CONFIGURATION (MySQL for Heroku, H2 for local)
# ===================================================================
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:testdb}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# ===================================================================
# JPA/HIBERNATE CONFIGURATION
# ===================================================================
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.properties.hibernate.id.new_generator_mappings=false

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# ===================================================================
# THYMELEAF CONFIGURATION
# ===================================================================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=${THYMELEAF_CACHE:true}
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

# ===================================================================
# STATIC RESOURCES CONFIGURATION
# ===================================================================
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=${STATIC_CACHE:3600}

# ===================================================================
# FILE UPLOAD CONFIGURATION
# ===================================================================
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging.level.com.gomconcept=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=${SPRING_LOG_LEVEL:WARN}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${BINDER_LOG_LEVEL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ===================================================================
# DEVELOPMENT CONFIGURATION
# ===================================================================
spring.devtools.restart.enabled=${DEVTOOLS_RESTART:false}
spring.devtools.livereload.enabled=${DEVTOOLS_LIVERELOAD:false}

# ===================================================================
# ERROR HANDLING
# ===================================================================
server.error.whitelabel.enabled=false
server.error.path=/error

# ===================================================================
# INTERNATIONALIZATION
# ===================================================================
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

# ===================================================================
# GOOGLE OAUTH2 CONFIGURATION (Using Environment Variables)
# ===================================================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:{baseUrl}/login/oauth2/code/{registrationId}}
spring.security.oauth2.client.registration.google.client-name=Google

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email